plugins {
    id 'com.android.application'
    id 'kotlin-android-extensions'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.otaz.marvelheroappsimple"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Implementation used to attempt to share data between fragments so that character ID can be used to make API call for chosen character
    def fragmentDataSharing = "1.5.4"
    implementation "androidx.fragment:fragment-ktx:$fragmentDataSharing"

    // Navigation
    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Retrofit
    def retrofit = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    // Okhttp
    def okhttp = "4.10.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.squareup.okhttp3:mockwebserver:$okhttp"

    // Room
    def room = "2.4.3"
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"

    // Architectural Components
    def architecturalComponents= "2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$architecturalComponents"

    // Kotlin Extensions and Coroutines support for Room
    def ktxRoomExt = "2.4.3"
    implementation "androidx.room:room-ktx:$ktxRoomExt"

    // Coroutines
    def coroutines = "1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Coroutine Lifecycle Scopes
    def lifecycleScopes = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleScopes"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleScopes"

    // Dagger-Hilt
    def daggerHilt = "2.44.2"
    implementation "com.google.dagger:hilt-android:$daggerHilt"
    kapt "com.google.dagger:hilt-compiler:$daggerHilt"

    // MDC-Android
    def mdc = "1.7.0"
    implementation "com.google.android.material:material:$mdc"

    // Glide
    def glide = "4.14.2"
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"

    // Circle Image View
    def circleImageView = "3.1.0"
    implementation "de.hdodenhof:circleimageview:$circleImageView"
}